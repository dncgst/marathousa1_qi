w <- as.owin(unitsA_2015.shp)
plot(UA4_surf.ok.im, axes=TRUE, main="a"); plot(w, add=TRUE)
library(GISTools)
GISTools::north.arrow(xb=937.5, yb=677.5, len=0.05, lab="N", cex.lab=1) GISTools::map.scale(xc=938.5, yc=677.5, len=1, units="meter", ndivs=1)
GISTools::north.arrow(xb=937.5, yb=677.5, len=0.05, lab="N", cex.lab=1)
GISTools::map.scale(xc=938.5, yc=677.5, len=1, units="meter", ndivs=1)
# fig.5: IDW interpolated UA3c/UA4 and UB4c/UB5a surfaces
setEPS()
pdf("./doc/artwork/Fig5.pdf", width=30, height=10, family="Helvetica")
par(mfcol=c(1,3), mar= c(6,6,6,6), ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
w <- as.owin(unitsA_2015.shp)
plot(UA4_surf.ok.im, axes=TRUE, main="a"); plot(w, add=TRUE)
library(GISTools)
GISTools::north.arrow(xb=937.5, yb=677.5, len=0.05, lab="N", cex.lab=1)
GISTools::map.scale(xc=938.5, yc=677.5, len=1, units="meter", ndivs=1)
w <- as.owin(unitsB_2015.shp)
#plot(UB5a_surf.idw, axes=TRUE, main="b"); plot(w, add=TRUE)
plot(UB5a_surf.ok.im, axes=TRUE, main="b"); plot(w, add=TRUE)
GISTools::north.arrow(xb=933, yb=610, len=0.1, lab="N", cex.lab=1)
GISTools::map.scale(xc=933.5, yc=608.5, len=1, units="meter", ndivs=1)
z <- 2 * volcano        # Exaggerate the relief
x <- 10 * (1:nrow(z))   # 10 meter spacing (S to N)
y <- 10 * (1:ncol(z))   # 10 meter spacing (E to W)
persp(x, y, z, theta=135, phi=10, col="gray", scale=FALSE,
ltheta=-120, shade=0.75, border=NA, box=FALSE, main="c")
dev.off()
# fig.5: IDW interpolated UA3c/UA4 and UB4c/UB5a surfaces
setEPS()
postscript("./doc/artwork/Fig5.eps", width=30, height=10, family="Helvetica")
par(mfcol=c(1,3), mar= c(6,6,6,6), ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
w <- as.owin(unitsA_2015.shp)
plot(UA4_surf.ok.im, axes=TRUE, main="a"); plot(w, add=TRUE)
library(GISTools)
GISTools::north.arrow(xb=937.5, yb=677.5, len=0.05, lab="N", cex.lab=1)
GISTools::map.scale(xc=938.5, yc=677.5, len=1, units="meter", ndivs=1)
w <- as.owin(unitsB_2015.shp)
#plot(UB5a_surf.idw, axes=TRUE, main="b"); plot(w, add=TRUE)
plot(UB5a_surf.ok.im, axes=TRUE, main="b"); plot(w, add=TRUE)
GISTools::north.arrow(xb=933, yb=610, len=0.1, lab="N", cex.lab=1)
GISTools::map.scale(xc=933.5, yc=608.5, len=1, units="meter", ndivs=1)
z <- 2 * volcano        # Exaggerate the relief
x <- 10 * (1:nrow(z))   # 10 meter spacing (S to N)
y <- 10 * (1:ncol(z))   # 10 meter spacing (E to W)
persp(x, y, z, theta=135, phi=10, col="gray", scale=FALSE,
ltheta=-120, shade=0.75, border=NA, box=FALSE, main="c")
dev.off()
heR.Misc::rose(UA3c.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, cex=1, main="a")
heR.Misc::rose(UA4.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="b")
heR.Misc::rose(Elephas.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="c")
heR.Misc::rose(UB4c_test.fabric$bearing_clock, bins=12, col="red", rings=TRUE, labels=TRUE, rscale=2, main="")
heR.Misc::rose(UB4c_test.fabric$bearing_comp, bins=12, col="red", rings=TRUE, labels=TRUE, rscale=2, main="")
# fig.6: rose diagram, 12 bins (30 degrees)
# (double column - full page width: 190mm/539pt/7.48inches; lettering: 7pt)
setEPS()
pdf("./doc/artwork/Fig6.pdf", width=30, height=5, family="Helvetica")
par(mfcol=c(1,5), ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
heR.Misc::rose(UA3c.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, cex=1, main="a")
heR.Misc::rose(UA4.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="b")
heR.Misc::rose(Elephas.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="c")
heR.Misc::rose(UB4c_test.fabric$bearing_clock, bins=12, col="a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="d")
heR.Misc::rose(UB4c_test.fabric$bearing_comp, bins=12, col="a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="e")
dev.off()
# load packages: fabric analysis
library(circular)
library(CircStats)
library(RFOC)
library(plotrix)
library(heR.Misc)
# fig.6: rose diagram, 12 bins (30 degrees)
# (double column - full page width: 190mm/539pt/7.48inches; lettering: 7pt)
setEPS()
pdf("./doc/artwork/Fig6.pdf", width=30, height=5, family="Helvetica")
par(mfcol=c(1,5), ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
heR.Misc::rose(UA3c.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, cex=1, main="a")
heR.Misc::rose(UA4.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="b")
heR.Misc::rose(Elephas.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="c")
heR.Misc::rose(UB4c_test.fabric$bearing_clock, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="d")
heR.Misc::rose(UB4c_test.fabric$bearing_comp, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="e")
dev.off()
# fig.6: rose diagram, 12 bins (30 degrees)
# (double column - full page width: 190mm/539pt/7.48inches; lettering: 7pt)
setEPS()
postscript("./doc/artwork/Fig6.eps", width=30, height=5, family="Helvetica")
par(mfcol=c(1,5), ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
heR.Misc::rose(UA3c.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, cex=1, main="a")
heR.Misc::rose(UA4.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="b")
heR.Misc::rose(Elephas.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="c")
heR.Misc::rose(UB4c_test.fabric$bearing_clock, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="d")
heR.Misc::rose(UB4c_test.fabric$bearing_comp, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="e")
dev.off()
# fig.5: IDW interpolated UA3c/UA4 and UB4c/UB5a surfaces
setEPS()
pdf("./doc/artwork/Fig5.pdf", width=20, height=10, family="Helvetica")
par(mfcol=c(1,3), mar= c(6,6,6,6), ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
w <- as.owin(unitsA_2015.shp)
plot(UA4_surf.ok.im, axes=TRUE, main="a"); plot(w, add=TRUE)
library(GISTools)
GISTools::north.arrow(xb=937.5, yb=677.5, len=0.05, lab="N", cex.lab=1)
GISTools::map.scale(xc=938.5, yc=677.5, len=1, units="meter", ndivs=1)
w <- as.owin(unitsB_2015.shp)
#plot(UB5a_surf.idw, axes=TRUE, main="b"); plot(w, add=TRUE)
plot(UB5a_surf.ok.im, axes=TRUE, main="b"); plot(w, add=TRUE)
GISTools::north.arrow(xb=933, yb=610, len=0.1, lab="N", cex.lab=1)
GISTools::map.scale(xc=933.5, yc=608.5, len=1, units="meter", ndivs=1)
z <- 2 * volcano        # Exaggerate the relief
x <- 10 * (1:nrow(z))   # 10 meter spacing (S to N)
y <- 10 * (1:ncol(z))   # 10 meter spacing (E to W)
persp(x, y, z, theta=135, phi=10, col="gray", scale=FALSE,
ltheta=-120, shade=0.75, border=NA, box=FALSE, main="c")
dev.off()
# fig.6: rose diagram, 12 bins (30 degrees)
# (double column - full page width: 190mm/539pt/7.48inches; lettering: 7pt)
setEPS()
pdf("./doc/artwork/Fig6.pdf", width=20, height=10, family="Helvetica")
par(mfcol=c(2,3), ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
heR.Misc::rose(UA3c.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, cex=1, main="a")
heR.Misc::rose(UA4.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="b")
heR.Misc::rose(Elephas.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="c")
heR.Misc::rose(UB4c_test.fabric$bearing_clock, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="d")
heR.Misc::rose(UB4c_test.fabric$bearing_comp, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="e")
dev.off()
# fig.6: rose diagram, 12 bins (30 degrees)
# (double column - full page width: 190mm/539pt/7.48inches; lettering: 7pt)
setEPS()
postscript("./doc/artwork/Fig6.eps", width=20, height=10, family="Helvetica")
par(mfcol=c(2,3), ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
heR.Misc::rose(UA3c.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, cex=1, main="a")
heR.Misc::rose(UA4.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="b")
heR.Misc::rose(Elephas.fabric$bearing, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="c")
heR.Misc::rose(UB4c_test.fabric$bearing_clock, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="d")
heR.Misc::rose(UB4c_test.fabric$bearing_comp, bins=12, col="#a01d3bff", rings=TRUE, labels=TRUE, rscale=2, main="e")
dev.off()
## eigenvalues ratio graph
plot(log(UA3c.s2_s3),log(UA3c.s1_s2),pch=15,xlim=c(0,3),ylim=c(0,3),xlab="ln S2/S3",ylab="ln S1/S2", main="a")
## shape parameter K=ln(S1/S2)/ln(S2/S3) ranges from 0 (uniaxial girdles) to infinite (uniaxial clusters)
abline(h=0,col="grey",lty=2)
abline(v=0,col="grey",lty=2)
abline(0,1,col="grey",lty=2)
abline(0,2,col="grey",lty=2)
abline(0,.5,col="grey",lty=2)
abline(0,5,col="grey",lty=2)
abline(0,.2,col="grey",lty=2)
text(2.95,2.8,label="K=1",col="grey",lwd=.02)
text(2.95,.12,label="K=0",col="grey",lwd=.02)
text(.2,3,label=expression(paste("K=",infinity)),col="grey",lwd=.02)
text(2.95,.75,label="K=0.2",col="grey",lwd=.02)
text(2.95,1.65,label="K=0.5",col="grey",lwd=.02)
text(.8,3,label="K=5",col="grey",lwd=.02)
text(1.7,3,label="K=2",col="grey",lwd=.02)
## complementary to the shape parameter is the parameter C=ln(S1/S3) which expresses the 'strength' of the preferred orientation in the data sample [@Woodcock1977]. Strongly organized samples have larger C and plot further from the origin of the ratio graph. A perfect uniform distribution of data would have C=0 and would plot at the origin with S1=S2=S3=1/3. Random samples will also plot close to the origin and have low C values, suggesting that this parameter might be used as a test statistic for randomness
abline(3,-1,col="grey",lty=1)
text(1.7,1.5,label="C=3",col="grey",lwd=.02)
##
PlotPTsmooth(UA3c.fabric$bearing,UA3c.fabric$plunge,x=log(UA3c.s2_s3),y=log(UA3c.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(.5,.75,label="UA3c",col="black",lwd=.04)
PlotPTsmooth(UA4.fabric$bearing,UA4.fabric$plunge,x=log(UA4.s2_s3),y=log(UA4.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(1.5,.5,label="UA4",col="black",lwd=.04)
#PlotPTsmooth(Elephas.fabric$bearing,Elephas.fabric$plunge,x=log(E.s2_s3),y=log(E.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
#text(2.1,.1,label="Eleph.",col="black",lwd=.04)
PlotPTsmooth(Elephas.fabric$bearing,Elephas.fabric$plunge,x=log(E63.s2_s3),y=log(E63.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(1.3,.75,label="Eleph.",col="black",lwd=.04)
#PlotPTsmooth(UB4c_clock.fabric$bearing,UB4c_clock.fabric$plunge,x=log(UB4c_clock.s2_s3),y=log(UB4c_clock.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
#text(.4,.35,label="UB4c (clock)",col="black",lwd=.04)
PlotPTsmooth(deg(UB4c_test.fabric$bearing_clock),deg(UB4c_test.fabric$plunge_clock),x=log(clock.s2_s3),y=log(clock.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(.25,.40,label="UB4c (clock)",col="black",lwd=.02)
#PlotPTsmooth(UB4c_comp.fabric$bearing,UB4c_comp.fabric$plunge,x=log(UB4c_comp.s2_s3),y=log(UB4c_comp.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
#text(.8,.02,label="UB4c (comp)",col="black",lwd=.04)
PlotPTsmooth(deg(UB4c_test.fabric$bearing_comp),deg(UB4c_test.fabric$plunge_comp),x=log(comp.s2_s3),y=log(comp.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(.80,.20,label="UB4c (comp)",col="black",lwd=.02)
##
text(1.45,1.65,label="WEAK <--> STRONG",col="gray",lwd=.03,srt=45,pos=1)
text(2.55,2.63,label="<-- CLUSTERS | GIRDLES -->",col="gray",lwd=.03,srt=-45,pos=1)
clock.s1_s3
comp.s1_s3
summary(UB4c_test.fabric)
#C <- as.data.frame(cbind(c(UA3c.s1_s3, UA4.s1_s3, E.s1_s3, UB4c_clock.s1_s3, UB4c_comp.s1_s3),c(49, 38, 43, 86, 65)))
#C <- as.data.frame(cbind(c(UA3c.s1_s3, UA4.s1_s3, E63.s1_s3, UB4c_clock.s1_s3, UB4c_comp.s1_s3),c(49, 38, 63, 86, 65)))
C <- as.data.frame(cbind(c(UA3c.s1_s3, UA4.s1_s3, E63.s1_s3, clock.s1_s3, comp.s1_s3),c(49, 38, 63, 38, 38)))
### plot
plot(x=s1s3_test$N, y=log(s1s3_test$X90.), type="b", col="grey", lty=2, xlim=c(0,100), xlab="Obs.", ylab="ln C", main="b")
lines(x=s1s3_test$N, y=log(s1s3_test$X95.), type="b", col="grey", lty=2, add=TRUE)
lines(x=s1s3_test$N, y=log(s1s3_test$X97.5.), type="b", col="grey", lty=2, add=TRUE)
lines(x=s1s3_test$N, y=log(s1s3_test$X99.), type="b", col="grey", lty=2, add=TRUE)
points(C$V2, log(C$V1), pch=21, bg="#a51e37", col="#a51e37", cex=2, add=TRUE)
text(10,1, label="RANDOM",col="grey", lwd=.02)
text(25,2, label="SIGNIFICANT",col="grey",lwd=.02)
text(49,1.07, label="UA3c",col="black",lwd=.02)
text(38,1.86, label="UA4",col="black", lwd=.02)
text(63,1.92, label="Eleph.",col="black", lwd=.02)
text(86,.32, label="UB4c (clock)",col="black", lwd=.02)
text(65,.45, label="UB4c (comp)",col="black", lwd=.02)
C
C$V2
log(C$V1
log(C$V1)
log(C$V1)
clock.s1_s3
comp.s1_s3
text(38,.7, label="UB4c (clock)",col="black", lwd=.02)
text(38,.6, label="UB4c (comp)",col="black", lwd=.02)
text(38,.75, label="UB4c (clock)",col="black", lwd=.02)
text(38,.55, label="UB4c (comp)",col="black", lwd=.02)
text(38,.5, label="UB4c (comp)",col="black", lwd=.02)
# fig.7: Woodcock diagram
setEPS()
pdf("./doc/artwork/Fig7.pdf", width=20, height=10)
par(mfcol=c(1,2), mar= c(6,6,6,6), ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
## eigenvalues ratio graph
plot(log(UA3c.s2_s3),log(UA3c.s1_s2),pch=15,xlim=c(0,3),ylim=c(0,3),xlab="ln S2/S3",ylab="ln S1/S2", main="a")
## shape parameter K=ln(S1/S2)/ln(S2/S3) ranges from 0 (uniaxial girdles) to infinite (uniaxial clusters)
abline(h=0,col="grey",lty=2)
abline(v=0,col="grey",lty=2)
abline(0,1,col="grey",lty=2)
abline(0,2,col="grey",lty=2)
abline(0,.5,col="grey",lty=2)
abline(0,5,col="grey",lty=2)
abline(0,.2,col="grey",lty=2)
text(2.95,2.8,label="K=1",col="grey",lwd=.02)
text(2.95,.12,label="K=0",col="grey",lwd=.02)
text(.2,3,label=expression(paste("K=",infinity)),col="grey",lwd=.02)
text(2.95,.75,label="K=0.2",col="grey",lwd=.02)
text(2.95,1.65,label="K=0.5",col="grey",lwd=.02)
text(.8,3,label="K=5",col="grey",lwd=.02)
text(1.7,3,label="K=2",col="grey",lwd=.02)
## complementary to the shape parameter is the parameter C=ln(S1/S3) which expresses the 'strength' of the preferred orientation in the data sample [@Woodcock1977]. Strongly organized samples have larger C and plot further from the origin of the ratio graph. A perfect uniform distribution of data would have C=0 and would plot at the origin with S1=S2=S3=1/3. Random samples will also plot close to the origin and have low C values, suggesting that this parameter might be used as a test statistic for randomness
abline(3,-1,col="grey",lty=1)
text(1.7,1.5,label="C=3",col="grey",lwd=.02)
##
PlotPTsmooth(UA3c.fabric$bearing,UA3c.fabric$plunge,x=log(UA3c.s2_s3),y=log(UA3c.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(.5,.75,label="UA3c",col="black",lwd=.04)
PlotPTsmooth(UA4.fabric$bearing,UA4.fabric$plunge,x=log(UA4.s2_s3),y=log(UA4.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(1.5,.5,label="UA4",col="black",lwd=.04)
#PlotPTsmooth(Elephas.fabric$bearing,Elephas.fabric$plunge,x=log(E.s2_s3),y=log(E.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
#text(2.1,.1,label="Eleph.",col="black",lwd=.04)
PlotPTsmooth(Elephas.fabric$bearing,Elephas.fabric$plunge,x=log(E63.s2_s3),y=log(E63.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(1.3,.75,label="Eleph.",col="black",lwd=.04)
#PlotPTsmooth(UB4c_clock.fabric$bearing,UB4c_clock.fabric$plunge,x=log(UB4c_clock.s2_s3),y=log(UB4c_clock.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
#text(.4,.35,label="UB4c (clock)",col="black",lwd=.04)
PlotPTsmooth(deg(UB4c_test.fabric$bearing_clock),deg(UB4c_test.fabric$plunge_clock),x=log(clock.s2_s3),y=log(clock.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(.25,.40,label="UB4c (clock)",col="black",lwd=.02)
#PlotPTsmooth(UB4c_comp.fabric$bearing,UB4c_comp.fabric$plunge,x=log(UB4c_comp.s2_s3),y=log(UB4c_comp.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
#text(.8,.02,label="UB4c (comp)",col="black",lwd=.04)
PlotPTsmooth(deg(UB4c_test.fabric$bearing_comp),deg(UB4c_test.fabric$plunge_comp),x=log(comp.s2_s3),y=log(comp.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(.80,.20,label="UB4c (comp)",col="black",lwd=.02)
##
text(1.45,1.65,label="WEAK <--> STRONG",col="gray",lwd=.03,srt=45,pos=1)
text(2.55,2.63,label="<-- CLUSTERS | GIRDLES -->",col="gray",lwd=.03,srt=-45,pos=1)
### plot
plot(x=s1s3_test$N, y=log(s1s3_test$X90.), type="b", col="grey", lty=2, xlim=c(0,100), xlab="Obs.", ylab="ln C", main="b")
lines(x=s1s3_test$N, y=log(s1s3_test$X95.), type="b", col="grey", lty=2, add=TRUE)
lines(x=s1s3_test$N, y=log(s1s3_test$X97.5.), type="b", col="grey", lty=2, add=TRUE)
lines(x=s1s3_test$N, y=log(s1s3_test$X99.), type="b", col="grey", lty=2, add=TRUE)
points(C$V2, log(C$V1), pch=21, bg="#a51e37", col="#a51e37", cex=2, add=TRUE)
text(10,1, label="RANDOM",col="grey", lwd=.02)
text(25,2, label="SIGNIFICANT",col="grey",lwd=.02)
text(49,1.07, label="UA3c",col="black",lwd=.02)
text(38,1.86, label="UA4",col="black", lwd=.02)
text(63,1.92, label="Eleph.",col="black", lwd=.02)
text(38,.75, label="UB4c (clock)",col="black", lwd=.02)
text(38,.5, label="UB4c (comp)",col="black", lwd=.02)
dev.off()
# fig.7: Woodcock diagram
setEPS()
pdf("./doc/artwork/Fig7.pdf", width=20, height=10)
par(mfcol=c(1,2), mar= c(6,6,6,6), ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
## eigenvalues ratio graph
plot(log(UA3c.s2_s3),log(UA3c.s1_s2),pch=15,xlim=c(0,3),ylim=c(0,3),xlab="ln S2/S3",ylab="ln S1/S2", main="a")
## shape parameter K=ln(S1/S2)/ln(S2/S3) ranges from 0 (uniaxial girdles) to infinite (uniaxial clusters)
abline(h=0,col="grey",lty=2)
abline(v=0,col="grey",lty=2)
abline(0,1,col="grey",lty=2)
abline(0,2,col="grey",lty=2)
abline(0,.5,col="grey",lty=2)
abline(0,5,col="grey",lty=2)
abline(0,.2,col="grey",lty=2)
text(2.95,2.8,label="K=1",col="grey",lwd=.02)
text(2.95,.12,label="K=0",col="grey",lwd=.02)
text(.2,3,label=expression(paste("K=",infinity)),col="grey",lwd=.02)
text(2.95,.75,label="K=0.2",col="grey",lwd=.02)
text(2.95,1.65,label="K=0.5",col="grey",lwd=.02)
text(.8,3,label="K=5",col="grey",lwd=.02)
text(1.7,3,label="K=2",col="grey",lwd=.02)
## complementary to the shape parameter is the parameter C=ln(S1/S3) which expresses the 'strength' of the preferred orientation in the data sample [@Woodcock1977]. Strongly organized samples have larger C and plot further from the origin of the ratio graph. A perfect uniform distribution of data would have C=0 and would plot at the origin with S1=S2=S3=1/3. Random samples will also plot close to the origin and have low C values, suggesting that this parameter might be used as a test statistic for randomness
abline(3,-1,col="grey",lty=1)
text(1.7,1.5,label="C=3",col="grey",lwd=.02)
##
PlotPTsmooth(UA3c.fabric$bearing,UA3c.fabric$plunge,x=log(UA3c.s2_s3),y=log(UA3c.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(.5,.75,label="UA3c",col="black",lwd=.04)
PlotPTsmooth(UA4.fabric$bearing,UA4.fabric$plunge,x=log(UA4.s2_s3),y=log(UA4.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(1.5,.5,label="UA4",col="black",lwd=.04)
#PlotPTsmooth(Elephas.fabric$bearing,Elephas.fabric$plunge,x=log(E.s2_s3),y=log(E.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
#text(2.1,.1,label="Eleph.",col="black",lwd=.04)
PlotPTsmooth(Elephas.fabric$bearing,Elephas.fabric$plunge,x=log(E63.s2_s3),y=log(E63.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(1.3,.75,label="Eleph.",col="black",lwd=.04)
#PlotPTsmooth(UB4c_clock.fabric$bearing,UB4c_clock.fabric$plunge,x=log(UB4c_clock.s2_s3),y=log(UB4c_clock.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
#text(.4,.35,label="UB4c (clock)",col="black",lwd=.04)
PlotPTsmooth(deg(UB4c_test.fabric$bearing_clock),deg(UB4c_test.fabric$plunge_clock),x=log(clock.s2_s3),y=log(clock.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(.25,.40,label="UB4c (clock)",col="black",lwd=.02)
#PlotPTsmooth(UB4c_comp.fabric$bearing,UB4c_comp.fabric$plunge,x=log(UB4c_comp.s2_s3),y=log(UB4c_comp.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
#text(.8,.02,label="UB4c (comp)",col="black",lwd=.04)
PlotPTsmooth(deg(UB4c_test.fabric$bearing_comp),deg(UB4c_test.fabric$plunge_comp),x=log(comp.s2_s3),y=log(comp.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(.95,.20,label="UB4c (comp)",col="black",lwd=.02)
##
text(1.45,1.65,label="WEAK <--> STRONG",col="gray",lwd=.03,srt=45,pos=1)
text(2.55,2.63,label="<-- CLUSTERS | GIRDLES -->",col="gray",lwd=.03,srt=-45,pos=1)
### plot
plot(x=s1s3_test$N, y=log(s1s3_test$X90.), type="b", col="grey", lty=2, xlim=c(0,100), xlab="Obs.", ylab="ln C", main="b")
lines(x=s1s3_test$N, y=log(s1s3_test$X95.), type="b", col="grey", lty=2, add=TRUE)
lines(x=s1s3_test$N, y=log(s1s3_test$X97.5.), type="b", col="grey", lty=2, add=TRUE)
lines(x=s1s3_test$N, y=log(s1s3_test$X99.), type="b", col="grey", lty=2, add=TRUE)
points(C$V2, log(C$V1), pch=21, bg="#a51e37", col="#a51e37", cex=2, add=TRUE)
text(10,1, label="RANDOM",col="grey", lwd=.02)
text(25,2, label="SIGNIFICANT",col="grey",lwd=.02)
text(49,1.07, label="UA3c",col="black",lwd=.02)
text(38,1.86, label="UA4",col="black", lwd=.02)
text(63,1.92, label="Eleph.",col="black", lwd=.02)
text(38,.8, label="UB4c (clock)",col="black", lwd=.02)
text(38,.45, label="UB4c (comp)",col="black", lwd=.02)
dev.off()
# fig.7: Woodcock diagram
setEPS()
postscript("./doc/artwork/Fig7.eps", width=20, height=10, family="Helvetica")
par(mfcol=c(1,2), mar= c(6,6,6,6), ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
## eigenvalues ratio graph
plot(log(UA3c.s2_s3),log(UA3c.s1_s2),pch=15,xlim=c(0,3),ylim=c(0,3),xlab="ln S2/S3",ylab="ln S1/S2", main="a")
## shape parameter K=ln(S1/S2)/ln(S2/S3) ranges from 0 (uniaxial girdles) to infinite (uniaxial clusters)
abline(h=0,col="grey",lty=2)
abline(v=0,col="grey",lty=2)
abline(0,1,col="grey",lty=2)
abline(0,2,col="grey",lty=2)
abline(0,.5,col="grey",lty=2)
abline(0,5,col="grey",lty=2)
abline(0,.2,col="grey",lty=2)
text(2.95,2.8,label="K=1",col="grey",lwd=.02)
text(2.95,.12,label="K=0",col="grey",lwd=.02)
text(.2,3,label=expression(paste("K=",infinity)),col="grey",lwd=.02)
text(2.95,.75,label="K=0.2",col="grey",lwd=.02)
text(2.95,1.65,label="K=0.5",col="grey",lwd=.02)
text(.8,3,label="K=5",col="grey",lwd=.02)
text(1.7,3,label="K=2",col="grey",lwd=.02)
## complementary to the shape parameter is the parameter C=ln(S1/S3) which expresses the 'strength' of the preferred orientation in the data sample [@Woodcock1977]. Strongly organized samples have larger C and plot further from the origin of the ratio graph. A perfect uniform distribution of data would have C=0 and would plot at the origin with S1=S2=S3=1/3. Random samples will also plot close to the origin and have low C values, suggesting that this parameter might be used as a test statistic for randomness
abline(3,-1,col="grey",lty=1)
text(1.7,1.5,label="C=3",col="grey",lwd=.02)
##
PlotPTsmooth(UA3c.fabric$bearing,UA3c.fabric$plunge,x=log(UA3c.s2_s3),y=log(UA3c.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(.5,.75,label="UA3c",col="black",lwd=.04)
PlotPTsmooth(UA4.fabric$bearing,UA4.fabric$plunge,x=log(UA4.s2_s3),y=log(UA4.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(1.5,.5,label="UA4",col="black",lwd=.04)
#PlotPTsmooth(Elephas.fabric$bearing,Elephas.fabric$plunge,x=log(E.s2_s3),y=log(E.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
#text(2.1,.1,label="Eleph.",col="black",lwd=.04)
PlotPTsmooth(Elephas.fabric$bearing,Elephas.fabric$plunge,x=log(E63.s2_s3),y=log(E63.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(1.3,.75,label="Eleph.",col="black",lwd=.04)
#PlotPTsmooth(UB4c_clock.fabric$bearing,UB4c_clock.fabric$plunge,x=log(UB4c_clock.s2_s3),y=log(UB4c_clock.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
#text(.4,.35,label="UB4c (clock)",col="black",lwd=.04)
PlotPTsmooth(deg(UB4c_test.fabric$bearing_clock),deg(UB4c_test.fabric$plunge_clock),x=log(clock.s2_s3),y=log(clock.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(.25,.40,label="UB4c (clock)",col="black",lwd=.02)
#PlotPTsmooth(UB4c_comp.fabric$bearing,UB4c_comp.fabric$plunge,x=log(UB4c_comp.s2_s3),y=log(UB4c_comp.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
#text(.8,.02,label="UB4c (comp)",col="black",lwd=.04)
PlotPTsmooth(deg(UB4c_test.fabric$bearing_comp),deg(UB4c_test.fabric$plunge_comp),x=log(comp.s2_s3),y=log(comp.s1_s2),siz=0.1,IMAGE=TRUE,CONT=TRUE,add=TRUE)
text(.95,.20,label="UB4c (comp)",col="black",lwd=.02)
##
text(1.45,1.65,label="WEAK <--> STRONG",col="gray",lwd=.03,srt=45,pos=1)
text(2.55,2.63,label="<-- CLUSTERS | GIRDLES -->",col="gray",lwd=.03,srt=-45,pos=1)
### plot
plot(x=s1s3_test$N, y=log(s1s3_test$X90.), type="b", col="grey", lty=2, xlim=c(0,100), xlab="Obs.", ylab="ln C", main="b")
lines(x=s1s3_test$N, y=log(s1s3_test$X95.), type="b", col="grey", lty=2, add=TRUE)
lines(x=s1s3_test$N, y=log(s1s3_test$X97.5.), type="b", col="grey", lty=2, add=TRUE)
lines(x=s1s3_test$N, y=log(s1s3_test$X99.), type="b", col="grey", lty=2, add=TRUE)
points(C$V2, log(C$V1), pch=21, bg="#a51e37", col="#a51e37", cex=2, add=TRUE)
text(10,1, label="RANDOM",col="grey", lwd=.02)
text(25,2, label="SIGNIFICANT",col="grey",lwd=.02)
text(49,1.07, label="UA3c",col="black",lwd=.02)
text(38,1.86, label="UA4",col="black", lwd=.02)
text(63,1.92, label="Eleph.",col="black", lwd=.02)
text(38,.8, label="UB4c (clock)",col="black", lwd=.02)
text(38,.45, label="UB4c (comp)",col="black", lwd=.02)
dev.off()
# benn diagram
triax.plot(matrix(c(UA3c.bs,UA3c.el,UA3c.is),ncol=3,byrow=2), show.grid=TRUE, pch=16, cex.ticks=.8, cex.axis=1, axis.labels=c("","Elongation Index\n EL=1-(S2/S1)","Isotropy Index\n IS=S3/S1"), tick.labels=list(l=seq(0.1,0.9,by=0.1), r=seq(0.1,0.9,by=0.1), b=NULL), main="")
triax.points(matrix(c(UA3c.bs,UA3c.el,UA3c.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.58,.33, label="UA3c", lwd=.02)
triax.points(matrix(c(UA4.bs,UA4.el,UA4.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.4,.11, label="UA4", lwd=.02)
#triax.points(matrix(c(E.bs,E.el,E.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.3,.11, label="Eleph.", lwd=.02)
triax.points(matrix(c(E63.bs,E63.el,E63.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.5,.18, label="Eleph.", lwd=.02)
#triax.points(matrix(c(UB4c_clock.bs,UB4c_clock.el,UB4c_clock.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.42,.51, label="UB4c (clock)", lwd=.02)
triax.points(matrix(c(clock.bs,clock.el,clock.is),ncol=3,byrow=2), pch=16, cex=2, col="#a01d3bff")
text(.42,.53,label="UB4c (clock)")
#triax.points(matrix(c(UB4c_comp.bs,UB4c_comp.el,UB4c_comp.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.48,.44, label="UB4c (comp)", lwd=.02)
triax.points(matrix(c(comp.bs,comp.el,comp.is),ncol=3,byrow=2), pch=16, cex=2, col="#a01d3bff")
text(.48,.40,label="UB4c (comp)")
# benn diagram
triax.plot(matrix(c(UA3c.bs,UA3c.el,UA3c.is),ncol=3,byrow=2), show.grid=TRUE, pch=16, cex.ticks=.8, cex.axis=1, axis.labels=c("","Elongation Index\n EL=1-(S2/S1)","Isotropy Index\n IS=S3/S1"), tick.labels=list(l=seq(0.1,0.9,by=0.1), r=seq(0.1,0.9,by=0.1), b=NULL), main="")
triax.points(matrix(c(UA3c.bs,UA3c.el,UA3c.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.58,.33, label="UA3c", lwd=.02)
triax.points(matrix(c(UA4.bs,UA4.el,UA4.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.4,.11, label="UA4", lwd=.02)
#triax.points(matrix(c(E.bs,E.el,E.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.3,.11, label="Eleph.", lwd=.02)
triax.points(matrix(c(E63.bs,E63.el,E63.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.5,.18, label="Eleph.", lwd=.02)
#triax.points(matrix(c(UB4c_clock.bs,UB4c_clock.el,UB4c_clock.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.42,.51, label="UB4c (clock)", lwd=.02)
triax.points(matrix(c(clock.bs,clock.el,clock.is),ncol=3,byrow=2), pch=16, cex=2, col="#a01d3bff")
text(.42,.53,label="UB4c (clock)")
#triax.points(matrix(c(UB4c_comp.bs,UB4c_comp.el,UB4c_comp.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.48,.44, label="UB4c (comp)", lwd=.02)
triax.points(matrix(c(comp.bs,comp.el,comp.is),ncol=3,byrow=2), pch=16, cex=2, col="#a01d3bff")
text(.48,.40,label="UB4c (comp)")
# benn diagram
triax.plot(matrix(c(UA3c.bs,UA3c.el,UA3c.is),ncol=3,byrow=2), show.grid=TRUE, pch=16, cex.ticks=.8, cex.axis=1, axis.labels=c("","Elongation Index\n EL=1-(S2/S1)","Isotropy Index\n IS=S3/S1"), tick.labels=list(l=seq(0.1,0.9,by=0.1), r=seq(0.1,0.9,by=0.1), b=NULL), main="")
triax.points(matrix(c(UA3c.bs,UA3c.el,UA3c.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.58,.33, label="UA3c", lwd=.02)
triax.points(matrix(c(UA4.bs,UA4.el,UA4.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.4,.11, label="UA4", lwd=.02)
#triax.points(matrix(c(E.bs,E.el,E.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.3,.11, label="Eleph.", lwd=.02)
triax.points(matrix(c(E63.bs,E63.el,E63.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.5,.18, label="Eleph.", lwd=.02)
#triax.points(matrix(c(UB4c_clock.bs,UB4c_clock.el,UB4c_clock.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.42,.51, label="UB4c (clock)", lwd=.02)
triax.points(matrix(c(clock.bs,clock.el,clock.is),ncol=3,byrow=2), pch=16, cex=2, col="#a01d3bff")
text(.48,.40,label="UB4c (clock)")
#triax.points(matrix(c(UB4c_comp.bs,UB4c_comp.el,UB4c_comp.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.48,.44, label="UB4c (comp)", lwd=.02)
triax.points(matrix(c(comp.bs,comp.el,comp.is),ncol=3,byrow=2), pch=16, cex=2, col="#a01d3bff")
text(.42,.53,label="UB4c (comp)")
text(0.5,0.9, label="isotropic")
text(-0.1,0, label="planar")
text(1.1,0, label="linear")
# fig.8: Benn diagram
setEPS()
pdf("./doc/artwork/Fig8.pdf", width=12, height=10, family="Helvetica")
par(mar= c(6,6,6,6), ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
# benn diagram
triax.plot(matrix(c(UA3c.bs,UA3c.el,UA3c.is),ncol=3,byrow=2), show.grid=TRUE, pch=16, cex.ticks=.8, cex.axis=1, axis.labels=c("","Elongation Index\n EL=1-(S2/S1)","Isotropy Index\n IS=S3/S1"), tick.labels=list(l=seq(0.1,0.9,by=0.1), r=seq(0.1,0.9,by=0.1), b=NULL), main="")
triax.points(matrix(c(UA3c.bs,UA3c.el,UA3c.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.58,.33, label="UA3c", lwd=.02)
triax.points(matrix(c(UA4.bs,UA4.el,UA4.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.4,.11, label="UA4", lwd=.02)
#triax.points(matrix(c(E.bs,E.el,E.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.3,.11, label="Eleph.", lwd=.02)
triax.points(matrix(c(E63.bs,E63.el,E63.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.5,.18, label="Eleph.", lwd=.02)
#triax.points(matrix(c(UB4c_clock.bs,UB4c_clock.el,UB4c_clock.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.42,.51, label="UB4c (clock)", lwd=.02)
triax.points(matrix(c(clock.bs,clock.el,clock.is),ncol=3,byrow=2), pch=16, cex=2, col="#a01d3bff")
text(.48,.40,label="UB4c (clock)")
#triax.points(matrix(c(UB4c_comp.bs,UB4c_comp.el,UB4c_comp.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.48,.44, label="UB4c (comp)", lwd=.02)
triax.points(matrix(c(comp.bs,comp.el,comp.is),ncol=3,byrow=2), pch=16, cex=2, col="#a01d3bff")
text(.42,.53,label="UB4c (comp)")
text(0.5,0.9, label="isotropic")
text(-0.1,0, label="planar")
text(1.1,0, label="linear")
dev.off()
# fig.8: Benn diagram
setEPS()
pdf("./doc/artwork/Fig8.pdf", width=12, height=10, family="Helvetica")
par(ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
# benn diagram
triax.plot(matrix(c(UA3c.bs,UA3c.el,UA3c.is),ncol=3,byrow=2), show.grid=TRUE, pch=16, cex.ticks=.8, cex.axis=1, axis.labels=c("","Elongation Index\n EL=1-(S2/S1)","Isotropy Index\n IS=S3/S1"), tick.labels=list(l=seq(0.1,0.9,by=0.1), r=seq(0.1,0.9,by=0.1), b=NULL), main="")
triax.points(matrix(c(UA3c.bs,UA3c.el,UA3c.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.58,.33, label="UA3c", lwd=.02)
triax.points(matrix(c(UA4.bs,UA4.el,UA4.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.4,.11, label="UA4", lwd=.02)
#triax.points(matrix(c(E.bs,E.el,E.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.3,.11, label="Eleph.", lwd=.02)
triax.points(matrix(c(E63.bs,E63.el,E63.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.5,.18, label="Eleph.", lwd=.02)
#triax.points(matrix(c(UB4c_clock.bs,UB4c_clock.el,UB4c_clock.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.42,.51, label="UB4c (clock)", lwd=.02)
triax.points(matrix(c(clock.bs,clock.el,clock.is),ncol=3,byrow=2), pch=16, cex=2, col="#a01d3bff")
text(.48,.40,label="UB4c (clock)")
#triax.points(matrix(c(UB4c_comp.bs,UB4c_comp.el,UB4c_comp.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.48,.44, label="UB4c (comp)", lwd=.02)
triax.points(matrix(c(comp.bs,comp.el,comp.is),ncol=3,byrow=2), pch=16, cex=2, col="#a01d3bff")
text(.42,.53,label="UB4c (comp)")
text(0.5,0.9, label="isotropic")
text(-0.1,0, label="planar")
text(1.1,0, label="linear")
dev.off()
# fig.8: Benn diagram
setEPS()
postscript("./doc/artwork/Fig8.eps", width=12, height=10, family="Helvetica")
par(ps=18, cex=1, cex.main=2, cex.axis=1, cex.lab=1)
# benn diagram
triax.plot(matrix(c(UA3c.bs,UA3c.el,UA3c.is),ncol=3,byrow=2), show.grid=TRUE, pch=16, cex.ticks=.8, cex.axis=1, axis.labels=c("","Elongation Index\n EL=1-(S2/S1)","Isotropy Index\n IS=S3/S1"), tick.labels=list(l=seq(0.1,0.9,by=0.1), r=seq(0.1,0.9,by=0.1), b=NULL), main="")
triax.points(matrix(c(UA3c.bs,UA3c.el,UA3c.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.58,.33, label="UA3c", lwd=.02)
triax.points(matrix(c(UA4.bs,UA4.el,UA4.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.4,.11, label="UA4", lwd=.02)
#triax.points(matrix(c(E.bs,E.el,E.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.3,.11, label="Eleph.", lwd=.02)
triax.points(matrix(c(E63.bs,E63.el,E63.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
text(.5,.18, label="Eleph.", lwd=.02)
#triax.points(matrix(c(UB4c_clock.bs,UB4c_clock.el,UB4c_clock.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.42,.51, label="UB4c (clock)", lwd=.02)
triax.points(matrix(c(clock.bs,clock.el,clock.is),ncol=3,byrow=2), pch=16, cex=2, col="#a01d3bff")
text(.48,.40,label="UB4c (clock)")
#triax.points(matrix(c(UB4c_comp.bs,UB4c_comp.el,UB4c_comp.is),ncol=3,byrow=2), pch=16, col="#a01d3bff", cex=2)
#text(.48,.44, label="UB4c (comp)", lwd=.02)
triax.points(matrix(c(comp.bs,comp.el,comp.is),ncol=3,byrow=2), pch=16, cex=2, col="#a01d3bff")
text(.42,.53,label="UB4c (comp)")
text(0.5,0.9, label="isotropic")
text(-0.1,0, label="planar")
text(1.1,0, label="linear")
dev.off()
